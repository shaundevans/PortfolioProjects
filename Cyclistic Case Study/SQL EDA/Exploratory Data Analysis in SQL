/* Adding two alterations to existing table -- month and year (separate columns) for additional grouping/reporitng options */

/* May 2020 */
alter table may_20 
add month_name varchar(12)

update may_20 
set month_name = 'May'
where month_name isnull 

/* June 2020 */ 
alter table jun_20 
add month_name varchar(12)

update jun_20 
set month_name = 'June'
where month_name isnull 

/* July 2020 */ 
alter table jul_20 
add month_name varchar(12)

update jul_20 
set month_name = 'July'
where month_name isnull 


/* August 2020 */ 
alter table aug_20 
add month_name varchar(12)

update aug_20 
set month_name = 'August'
where month_name isnull 


/* September 2020 */ 
alter table sep_20 
add month_name varchar(12)

update sep_20 
set month_name = 'September'
where month_name isnull; 

/* October 2020 */ 
alter table oct_20 
add month_name varchar(12)

update oct_20 
set month_name = 'October'
where month_name isnull; 

/* November 2020 */ 
alter table nov_20 
add month_name varchar(12)

update nov_20 
set month_name = 'November'
where month_name isnull; 

/* December 2020 */ 
alter table dec_20 
add month_name varchar(12)

update dec_20 
set month_name = 'December'
where month_name isnull; 

/* January 2021 */ 
alter table jan_21 
add month_name varchar(12)

update jan_21 
set month_name = 'January'
where month_name isnull; 

/* February 2021 */ 
alter table feb_21 
add month_name varchar(12)

update feb_21 
set month_name = 'February'
where month_name isnull; 

/* March 2021 */ 
alter table mar_21 
add month_name varchar(12)

update mar_21 
set month_name = 'March'
where month_name isnull; 




/* Creating a table that merges all information in the various months of data */ 

create table all_data as 
select * from may_20 m 
union 
select * from jun_20 j 
union 
select * from jul_20 j2 
union 
select * from aug_20 a 
union 
select * from sep_20 s 
union 
select * from oct_20 o 
union 
select * from nov_20 n 
union 
select * from dec_20 d 
union 
select * from jan_21 j3 
union 
select * from feb_21 f 
union 
select * from mar_21 m2 




/* Exploratory Data Analysis */ 

/* Usage Volume - By Rideable Type and Day of week and average ride length*/ 
select distinct(member_casual), rideable_type, day_of_week, 
avg(ride_length) over(partition by rideable_type, member_casual, day_of_week) as AvgRideLength,
count(ride_id) over(partition by member_casual,rideable_type, day_of_week) as RidesKinds
from all_data
order by member_casual, day_of_week 


select distinct(member_casual), day_of_week,
count(ride_id) over(partition by member_casual, day_of_week) as ridesbyday
from all_data 


/* Monthly Rider Statistics */

select count(ride_id), month_name from all_data 
group by month_name 

select distinct(member_casual), month_name, day_of_week,
count(ride_id) over(partition by member_casual, month_name, day_of_week) as rides_by_month_membership
from all_data 
order by member_casual


/* Most Popular Start Locations and End Locations */ 

select distinct(start_station_name), day_of_week, 
count(start_station_id) over(partition by day_of_week, start_station_name) as MostPopularStartLoc
from all_data ad 
order by day_of_week 


create view pop_rides as
select distinct(member_casual), start_station_name,month_name, day_of_week, 
count(start_station_id) over(partition by member_casual,start_station_name,month_name,day_of_week) as popularrides
from all_data ad 
order by member_casual, month_name, day_of_week  

select * from pop_rides 
where popularrides >10
and 
start_station_name not in ('WATSON TESTING - DIVVY', 'Unknown')
order by member_casual, month_name, popularrides desc
